@model Internship.Models.LearningObjectiveViewModel

@{
    ViewBag.Title = "LearningObjective";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Student’s Measurable Learning Objectives
</h2>

<p>
    The objectives must be specific to the student’s job and must clearly describe what the student plans to accomplish during the work experience. They must be reviewed by the student’s immediate supervisor, who may suggest changes or additions. The objectives must be submitted at least one week prior to the beginning of the semester and must be approved by the internship coordinator.
</p>
<p>
    At the end of the semester, the student’s supervisor must evaluate the extent to which the student accomplished each of the objectives by assigning a percentage figure from 0% to 100% in the column to the right of the objective.
</p>
<p><b>
    Note: Before submitting this form at the beginning of the semester, students must provide a copy to their immediate supervisor to complete at the conclusion of the semester.

</b>
</p>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LearningObjective.measureableLearningObjective1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LearningObjective.measureableLearningObjective1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LearningObjective.measureableLearningObjective1, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LearningObjective.measureableLearningObjective2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LearningObjective.measureableLearningObjective2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LearningObjective.measureableLearningObjective2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective2, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.LearningObjective.measureableLearningObjective3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LearningObjective.measureableLearningObjective3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LearningObjective.measureableLearningObjective3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LearningObjective.supervisorsRatingOfLearningObjective3, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
